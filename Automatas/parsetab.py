
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENBIGGER BIGGEROR DANCE DIVIDE EQUAL EQUALS FLOAT ID IF INT LNAME LPAREN MINUS NAME NOTEQUALS PLUS PRINT RPAREN SMALLER SMALLEROR THEN TIMES\n    result : expression\n           | if_statement\n           | print\n           | empty\n    \n    result : ID EQUAL expression\n    \n    expression : INT\n               | FLOAT\n    \n    expression : NAME\n               | LNAME\n    \n    expression : ID\n    \n    expression : expression TIMES expression\n               | expression DIVIDE expression\n               | expression PLUS expression\n               | expression MINUS expression\n    \n    expression : DANCE\n    \n    print : PRINT LPAREN expression RPAREN\n    \n    if_statement : IF compare THEN expression\n                 | IF compare THEN print\n    \n    compare : expression EQUALS expression\n            | expression NOTEQUALS expression\n            | expression BIGGER expression\n            | expression BIGGEROR expression\n            | expression SMALLER expression\n            | expression SMALLEROR expression\n    \n    expression : LPAREN expression RPAREN\n    \n    empty : \n    '
    
_lr_action_items = {'ID':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[6,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'INT':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LNAME':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'DANCE':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LPAREN':([0,12,13,14,15,16,17,18,19,24,31,32,33,34,35,36,37,],[12,12,12,24,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IF':([0,],[13,]),'PRINT':([0,31,],[14,14,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,21,25,26,27,28,29,30,39,40,47,],[-26,0,-1,-2,-3,-4,-10,-6,-7,-8,-9,-15,-10,-11,-12,-13,-14,-5,-25,-17,-18,-16,]),'TIMES':([2,6,7,8,9,10,11,20,21,23,25,26,27,28,29,30,38,39,41,42,43,44,45,46,],[15,-10,-6,-7,-8,-9,-15,15,-10,15,-11,-12,15,15,15,-25,15,15,15,15,15,15,15,15,]),'DIVIDE':([2,6,7,8,9,10,11,20,21,23,25,26,27,28,29,30,38,39,41,42,43,44,45,46,],[16,-10,-6,-7,-8,-9,-15,16,-10,16,-11,-12,16,16,16,-25,16,16,16,16,16,16,16,16,]),'PLUS':([2,6,7,8,9,10,11,20,21,23,25,26,27,28,29,30,38,39,41,42,43,44,45,46,],[17,-10,-6,-7,-8,-9,-15,17,-10,17,-11,-12,-13,-14,17,-25,17,17,17,17,17,17,17,17,]),'MINUS':([2,6,7,8,9,10,11,20,21,23,25,26,27,28,29,30,38,39,41,42,43,44,45,46,],[18,-10,-6,-7,-8,-9,-15,18,-10,18,-11,-12,-13,-14,18,-25,18,18,18,18,18,18,18,18,]),'EQUAL':([6,],[19,]),'RPAREN':([7,8,9,10,11,20,21,25,26,27,28,30,38,],[-6,-7,-8,-9,-15,30,-10,-11,-12,-13,-14,-25,47,]),'EQUALS':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,32,-11,-12,-13,-14,-25,]),'NOTEQUALS':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,33,-11,-12,-13,-14,-25,]),'BIGGER':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,34,-11,-12,-13,-14,-25,]),'BIGGEROR':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,35,-11,-12,-13,-14,-25,]),'SMALLER':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,36,-11,-12,-13,-14,-25,]),'SMALLEROR':([7,8,9,10,11,21,23,25,26,27,28,30,],[-6,-7,-8,-9,-15,-10,37,-11,-12,-13,-14,-25,]),'THEN':([7,8,9,10,11,21,22,25,26,27,28,30,41,42,43,44,45,46,],[-6,-7,-8,-9,-15,-10,31,-11,-12,-13,-14,-25,-19,-20,-21,-22,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'result':([0,],[1,]),'expression':([0,12,13,15,16,17,18,19,24,31,32,33,34,35,36,37,],[2,20,23,25,26,27,28,29,38,39,41,42,43,44,45,46,]),'if_statement':([0,],[3,]),'print':([0,31,],[4,40,]),'empty':([0,],[5,]),'compare':([13,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> result","S'",1,None,None,None),
  ('result -> expression','result',1,'p_result','Ex1.py',87),
  ('result -> if_statement','result',1,'p_result','Ex1.py',88),
  ('result -> print','result',1,'p_result','Ex1.py',89),
  ('result -> empty','result',1,'p_result','Ex1.py',90),
  ('result -> ID EQUAL expression','result',3,'p_var_assign','Ex1.py',96),
  ('expression -> INT','expression',1,'p_expression_int_float','Ex1.py',102),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','Ex1.py',103),
  ('expression -> NAME','expression',1,'p_expr_str','Ex1.py',109),
  ('expression -> LNAME','expression',1,'p_expr_str','Ex1.py',110),
  ('expression -> ID','expression',1,'p_expression_var','Ex1.py',116),
  ('expression -> expression TIMES expression','expression',3,'p_expression','Ex1.py',130),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','Ex1.py',131),
  ('expression -> expression PLUS expression','expression',3,'p_expression','Ex1.py',132),
  ('expression -> expression MINUS expression','expression',3,'p_expression','Ex1.py',133),
  ('expression -> DANCE','expression',1,'p_expression_dance','Ex1.py',168),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','Ex1.py',175),
  ('if_statement -> IF compare THEN expression','if_statement',4,'p_if_statement','Ex1.py',181),
  ('if_statement -> IF compare THEN print','if_statement',4,'p_if_statement','Ex1.py',182),
  ('compare -> expression EQUALS expression','compare',3,'p_comp','Ex1.py',191),
  ('compare -> expression NOTEQUALS expression','compare',3,'p_comp','Ex1.py',192),
  ('compare -> expression BIGGER expression','compare',3,'p_comp','Ex1.py',193),
  ('compare -> expression BIGGEROR expression','compare',3,'p_comp','Ex1.py',194),
  ('compare -> expression SMALLER expression','compare',3,'p_comp','Ex1.py',195),
  ('compare -> expression SMALLEROR expression','compare',3,'p_comp','Ex1.py',196),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_factor_paren','Ex1.py',218),
  ('empty -> <empty>','empty',0,'p_empty','Ex1.py',224),
]
